# harness.io/skip-file-for-deploy

apiVersion: v1
kind: ConfigMap
metadata:
  name: sysdigcloud-alerter-config
  namespace: sysdig
data:
  alerter-config.conf: |
    draios {
        backend {
            db = postgres
            postgres {
                url = "jdbc:postgresql://dev01-monitor-rds.ckhclwamxdlf.us-east-1.rds.amazonaws.com:5432/sysdig"
                user = "sysdig_user"
            }
            postgres_quartz {
                url = "jdbc:postgresql://dev01-monitor-rds.ckhclwamxdlf.us-east-1.rds.amazonaws.com:5432/quartz"
                user =  "quartz_user"
            }
        }
        cassandra {
            auto-schema = true
            hosts = ["sysdigcloud-cassandra"]
            port = 9042
            replicationStrategy = "NetworkTopologyStrategy"
            topology = [
                {
                    datacenterName = us-east
                    replicationFactor = 3
                }
            ]
            user = "sysdigcassandra"
            ssl {
                enabled = "true"
                ciphers = [""]
            }
        }
        elasticsearch {
            endpoints {
                default {
                    endpoint = "https://sysdigcloud-elasticsearch:9200"
                    enableSSL = "true"
                    verifySSL = "false"
                    username = "sysdig"
                    discovery = true
                    checkHealth = true
                    readTimeout = 20000
                    leaseTimeout = 60000
                }
                cluster {
                    endpoint = "https://sysdigcloud-elasticsearch:9200"
                    enableSSL = "true"
                    verifySSL = "false"
                    username = "sysdig"
                    discovery = true
                    checkHealth = true
                    readTimeout = 20000
                    leaseTimeout = 60000
                }
            }
        }
        mail {
            server = [
                {
                    password = "BNVur1vSyRHzkSmP5O7C7VCyXilYy22nR84gAQtLSvdT"
                    protocol = "smtp"
                    host =  "email-smtp.us-east-1.amazonaws.com"
                    port =  "587"
                    username =  "AKIAQ6D6QTELSQBWD34D"
                    password =  "BNVur1vSyRHzkSmP5O7C7VCyXilYy22nR84gAQtLSvdT"
                    tls =  "true"
                    ssl =  "true"
                }
            ]
            alerts {
                sender = "support@sysdig.com"
            }
            channelTestFailed {
                sender = "support@sysdig.com"
            }
            forgotPassword {
                sender = "support@sysdig.com"
            }
            registration {
                sender = "support@sysdig.com"
            }
        }
        environment = "staging"
        meerkat.api {
            enabled = "true"
            grpc {
                uri = "dns:///sysdig-meerkat-**************9112"
            }
        }
        slack {
            client {
                id = "3346754308.79910886535"
                scope = "incoming-webhook"
                endpoint = "https://slack.com/oauth/v2/authorize"
                oauth.endpoint = "https://slack.com/api/oauth.v2.access"
            }
            enabled = true
            signupChannel = "#signups-staging"
            salesforceChannel = "#signups-staging"
            chargifyChannel = "#chargify-anomalies-st"
            salesOpsChannel = "#saas-purchases-stg"
            salesforceErrors = "#trial-signup-errors"
            mixPanelLink = "https://mixpanel.com/report/580835/explore/#list/chosen_columns:!('Last%%20activity','$email',Customer,'Agent%%20count','Signed%%20up%%20on'),filter:(conjunction:and,filters:!((filter:(operand:'%s',operator:in),property:'$email',selected_property_type:string,type:string))),sort_order:descending,sort_property:'Last%%20activity',sort_property_type:datetime"
            chargifyLink = "https://sysdigcloud-staging.chargify.com/customers/%s"
        }
        api {

            sso { ### something saml
                saml {
                    certificate {
                        name = dev01-saml.p12
                        password = XPDwNe102d3nvSrqkkon
                    }
                }
            }
            secureServerName = "https://dev01.dev.draios.com/secure/"
            serverName = "https://dev01.dev.draios.com"
            ssoSecureRedirectUri = "https://dev01.dev.draios.com"
        }
        collector {
            serverName = "ingest-dev01.dev.draios.com"
            displayPort = 6443
        }
        security {
            inactivitySettings {
                trackerEnabled = "false"
                trackerTimeout = "1800"
            }
        }
        license = ""
        auditEvents {
            maxRetentionDays = "14"
            maxEventsPerDayPerCustomer = "100000"
        }
        prometheus {
            enabled = "true"
            api {
              url = "http://sysdigcloud-promchap"
              client = "standard"
            }
        }
        payments {
            region = "aws-eu-central"
        }
        fileStorage.cassandra.enabled = true
        salesforce {
            integration {
                test = false
                enabled = true
                endpoint =  "https://partial-sysdig-site.cs220.force.com/subscriptionsInboundRequest/services/apexrest/v1"
                token = "51cbfb29-438b-45ba-838f-9e69a4c14c66"
                backoffFixedWaitTime = 5m
                backoffMaxWaitTime = 1h
                connectTimeout = 10000
                readTimeout = 15000
                workers = 3
            }
        }
        alerts {
            templates {
                engine {
                    url = "http://sysdigcloud-email-renderer/mail"
                }
            }
        }
    }