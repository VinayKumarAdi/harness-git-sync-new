harnessApiVersion: '1.0'
type: ROLLING
concurrencyStrategy: INFRA
envName: AWS Test Environment
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroupAsExpression: false
  userGroupAsExpression: false
  userGroupNames:
  - Account Administrator
phases:
- type: SSH
  computeProviderName: Amazon Web Services
  daemonSet: false
  infraDefinitionName: ssh infra definition
  name: Phase 1
  phaseSteps:
  - type: INFRASTRUCTURE_NODE
    name: Prepare Infra
    steps:
    - type: ROLLING_NODE_SELECT
      name: Select Nodes
      properties:
        excludeSelectedHostsFromFuturePhases: true
        instanceCount: 1
        instanceUnitType: PERCENTAGE
        specificHosts: false
        templateUuid: null
        templateVariables: null
        templateVersion: null
    - type: SHELL_SCRIPT
      name: Set Some Vars
      properties:
        commandPath: null
        connectionAttributeName: null
        executeOnDelegate: true
        host: null
        outputVars: DATE,HOST
        publishAsVar: true
        scriptString: |-
          DATE=`date`
          HOST=`hostname`
        scriptType: BASH
        secretOutputVars: ''
        sshKeyRefName: null
        sweepingOutputName: pgRolling
        sweepingOutputScope: PHASE
        templateExpressions: null
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 60000
    stepsInParallel: false
  - type: DISABLE_SERVICE
    name: Disable Service
    stepsInParallel: false
  - type: DEPLOY_SERVICE
    name: Deploy Service
    steps:
    - type: SHELL_SCRIPT
      name: Shell Script
      properties:
        commandPath: null
        connectionAttributeName: null
        executeOnDelegate: true
        host: null
        outputVars: ''
        publishAsVar: false
        scriptString: |-
          echo "---> ${pgRolling.DATE} <---"
          echo "___${pgRolling.HOST}___"
        scriptType: BASH
        sshKeyRefName: null
        sweepingOutputName: null
        sweepingOutputScope: null
        templateExpressions: null
        templateVariables: ''
        timeoutMillis: 60000
    stepsInParallel: false
  - type: ENABLE_SERVICE
    name: Enable Service
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: Service Test Security Shell
  statefulSet: false
preDeploymentSteps:
- type: ARTIFACT_CHECK
  name: Artifact Check
rollbackPhases:
- type: SSH
  computeProviderName: Amazon Web Services
  daemonSet: false
  infraDefinitionName: ssh infra definition
  name: Rollback Phase 1
  phaseNameForRollback: Phase 1
  phaseSteps:
  - type: DISABLE_SERVICE
    name: Disable Service
    phaseStepNameForRollback: Enable Service
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: STOP_SERVICE
    name: Stop Service
    phaseStepNameForRollback: Deploy Service
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: DEPLOY_SERVICE
    name: Deploy Service
    phaseStepNameForRollback: Deploy Service
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: ENABLE_SERVICE
    name: Enable Service
    phaseStepNameForRollback: Disable Service
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    phaseStepNameForRollback: Deploy Service
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: Service Test Security Shell
  statefulSet: false
templatized: false
